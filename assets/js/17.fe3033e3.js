(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{556:function(t,a,v){"use strict";v.r(a);var _=v(6),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("本文研究了使用CAM对跳转指令进行加速的方法，提出PCBPC算法")]),t._v(" "),v("h2",{attrs:{id:"简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),v("h3",{attrs:{id:"研究的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#研究的问题"}},[t._v("#")]),t._v(" 研究的问题")]),t._v(" "),v("p",[t._v("使用CAM对跳转指令进行加速")]),t._v(" "),v("h3",{attrs:{id:"定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("static-number")]),t._v("：每个间接跳转映射地址个数，不管它重复多少次")]),t._v(" "),v("li",[v("code",[t._v("dynamic-amount")]),t._v("：运行时出现的间接跳转映射地址的数量")])]),t._v(" "),v("h3",{attrs:{id:"发现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发现"}},[t._v("#")]),t._v(" 发现")]),t._v(" "),v("ol",[v("li",[t._v("少量的间接跳转（"),v("code",[t._v("static-number")]),t._v("），占据了大量的"),v("code",[t._v("dynamic-amount")])]),t._v(" "),v("li",[t._v("很大一部分动态间接跳转映射地址来自返回指令")]),t._v(" "),v("li",[t._v("稳定组：几个间接跳转地址的映射具有稳定的顺序")])]),t._v(" "),v("h2",{attrs:{id:"pcbpc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#pcbpc"}},[t._v("#")]),t._v(" PCBPC")]),t._v(" "),v("h3",{attrs:{id:"做法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#做法"}},[t._v("#")]),t._v(" 做法")]),t._v(" "),v("ul",[v("li",[t._v("CAM逻辑上分为跳转区、备份区和返回区域\n"),v("ul",[v("li",[t._v("跳转区：跳转和调用指令的映射地址")]),t._v(" "),v("li",[t._v("返回区：返回指令的映射地址")]),t._v(" "),v("li",[t._v("备份区：替换出的地址")])])]),t._v(" "),v("li",[t._v("在每个区域单独使用FIFO策略作为替换算法")]),t._v(" "),v("li",[t._v("当程序在运行时遇到调用指令时，我们将它的返回地址和相对目标地址插入到CAM中")])])])}),[],!1,null,null,null);a.default=s.exports}}]);